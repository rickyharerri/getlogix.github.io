import{_ as s,c as a,o as n,a as e}from"./app.b9ff54ec.js";const y=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]}],"relativePath":"getting-started.md"}'),t={name:"getting-started.md"},l=e('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><p>Welcome to the zx documentation! This is a tool for writing better scripts.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm install zx</span></span>\n<span class="line"></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>Create a script file with <code>.mjs</code> extension:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">#!/usr/bin/env zx</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">$</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">cat package.json | grep name</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> branch </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">$</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">git branch --show-current</span><span style="color:#89DDFF;">`</span></span>\n<span class="line"><span style="color:#89DDFF;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">$</span><span style="color:#89DDFF;">`</span><span style="color:#C3E88D;">dep deploy --branch=</span><span style="color:#89DDFF;">${</span><span style="color:#A6ACCD;">branch</span><span style="color:#89DDFF;">}`</span></span>\n<span class="line"></span></code></pre></div>',7),o=[l];function p(c,r,i,d,h,D){return n(),a("div",null,o)}const F=s(t,[["render",p]]);export{y as __pageData,F as default};
